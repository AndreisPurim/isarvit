{"version":3,"sources":["DynamicForms.js","validators.js","check-name.js","special-name.js","validate-rating.js","Forms.js","index.js"],"names":["DynamicForm","props","state","validate","errors","validators","console","log","forEach","v","fieldValue","key","validations","vd","validator","undefined","push","message","onSubmit","e","preventDefault","Object","entries","length","alert","JSON","stringify","onChange","type","setState","target","value","found","find","d","data","filter","others","renderForm","model","defaultValues","map","m","name","input","className","options","o","checked","Fragment","label","indexOf","htmlFor","title","this","nextProps","prevState","id","React","Component","checkName","test","specialName","validateRating","parsedInput","Number","YAML","require","styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","App","current","Date","slice","onEdit","record","Validator","required","min","max","style","paddingLeft","textAlign","size","ReactDOM","render","href","document","getElementById"],"mappings":"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","file":"static/js/main.728d91f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default class DynamicForm extends React.Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    console.log(\"gds:p:s\", nextProps.defaultValues, prevState);\r\n\r\n    let derivedState = {};\r\n\r\n    if (\r\n      nextProps.defaultValues &&\r\n      nextProps.defaultValues.id !== prevState.id\r\n    ) {\r\n      //   Object.keys(prevState).forEach(k => {\r\n      //     derivedState[k] = \"\";\r\n      //   });\r\n      return {\r\n        ...nextProps.defaultValues\r\n      };\r\n    }\r\n\r\n    console.log(\"no state change\");\r\n    return null;\r\n  }\r\n\r\n  // Validate form fields (This is configured in DynamicForm as props)\r\n  validate = () => {\r\n    let errors = {};\r\n    const validators = this.props.validators;\r\n    console.log(validators);\r\n    validators.forEach((v) => {\r\n      console.log(v);\r\n      let fieldValue = this.state[v.key];\r\n      console.log(`validating ${v.key}`);\r\n      v.validations.forEach((vd) => {\r\n        let r = vd.validator(fieldValue);\r\n        if (!r) {\r\n          if (errors[v.key] == undefined) {\r\n            errors[v.key] = [];\r\n          }\r\n          //errors.push(`${v.key} ${vd.message}`)\r\n          // errors.push({\r\n          //   [v.key]:  vd.message\r\n          // });\r\n          errors[v.key].push(vd.message);\r\n        }\r\n      }); \r\n    })\r\n\r\n    console.log(\"ERRORS: \", errors);\r\n\r\n    return errors;\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    let errors = this.validate();\r\n    if (Object.entries(errors).length !== 0) {\r\n      alert(JSON.stringify(errors));\r\n      return false;\r\n    }\r\n    if (this.props.onSubmit) this.props.onSubmit(this.state);\r\n  };\r\n\r\n  onChange = (e, key, type = \"single\") => {\r\n    //console.log(`${key} changed ${e.target.value} type ${type}`);\r\n    if (type === \"single\") {\r\n      this.setState(\r\n        {\r\n          [key]: e.target.value\r\n        },\r\n        () => {}\r\n      );\r\n    } else {\r\n      // Array of values (e.g. checkbox): TODO: Optimization needed.\r\n      let found = this.state[key]\r\n        ? this.state[key].find(d => d === e.target.value)\r\n        : false;\r\n\r\n      if (found) {\r\n        let data = this.state[key].filter(d => {\r\n          return d !== found;\r\n        });\r\n        this.setState({\r\n          [key]: data\r\n        });\r\n      } else {\r\n        console.log(\"found\", key, this.state[key]);\r\n        // this.setState({\r\n        //   [key]: [e.target.value, ...this.state[key]]\r\n        // });\r\n        let others = this.state[key] ? [...this.state[key]] : [];\r\n        this.setState({\r\n          [key]: [e.target.value, ...others]\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  renderForm = () => {\r\n    let model = this.props.model;\r\n    let defaultValues = this.props.defaultValues;\r\n\r\n    let formUI = model.map(m => {\r\n      let key = m.key;\r\n      let type = m.type || \"text\";\r\n      let props = m.props || {};\r\n      let name = m.name;\r\n      let value = m.value;\r\n\r\n      let target = key;\r\n      value = this.state[target] || \"\";\r\n\r\n      let input = (\r\n        <input\r\n          {...props}\r\n          className=\"form-input\"\r\n          type={type}\r\n          key={key}\r\n          name={name}\r\n          value={value}\r\n          onChange={e => {\r\n            this.onChange(e, target);\r\n          }}\r\n        />\r\n      );\r\n\r\n      if (type == \"radio\") {\r\n        input = m.options.map(o => {\r\n          let checked = o.value == value;\r\n          return (\r\n            <React.Fragment key={\"fr\" + o.key}>\r\n              <input\r\n                {...props}\r\n                className=\"form-input\"\r\n                type={type}\r\n                key={o.key}\r\n                name={o.name}\r\n                checked={checked}\r\n                value={o.value}\r\n                onChange={e => {\r\n                  this.onChange(e, o.name);\r\n                }}\r\n              />\r\n              <label key={\"ll\" + o.key}>{o.label}</label>\r\n            </React.Fragment>\r\n          );\r\n        });\r\n        input = <div className=\"form-group-radio\">{input}</div>;\r\n      }\r\n\r\n      if (type == \"select\") {\r\n        input = m.options.map(o => {\r\n          let checked = o.value == value;\r\n          //console.log(\"select: \", o.value, value);\r\n          return (\r\n            <option\r\n              {...props}\r\n              className=\"form-input\"\r\n              key={o.key}\r\n              value={o.value}\r\n            >\r\n              {o.value}\r\n            </option>\r\n          );\r\n        });\r\n\r\n        //console.log(\"Select default: \", value);\r\n        input = (\r\n          <select\r\n            value={value}\r\n            onChange={e => {\r\n              this.onChange(e, m.key);\r\n            }}\r\n          >\r\n            {input}\r\n          </select>\r\n        );\r\n      }\r\n\r\n      if (type == \"checkbox\") {\r\n        input = m.options.map(o => {\r\n          //let checked = o.value == value;\r\n          let checked = false;\r\n          if (value && value.length > 0) {\r\n            checked = value.indexOf(o.value) > -1 ? true : false;\r\n          }\r\n          //console.log(\"Checkbox: \", checked);\r\n          return (\r\n            <React.Fragment key={\"cfr\" + o.key}>\r\n              <input\r\n                {...props}\r\n                className=\"form-input\"\r\n                type={type}\r\n                key={o.key}\r\n                name={o.name}\r\n                checked={checked}\r\n                value={o.value}\r\n                onChange={e => {\r\n                  this.onChange(e, m.key, \"multiple\");\r\n                }}\r\n              />\r\n              <label key={\"ll\" + o.key}>{o.label}</label>\r\n            </React.Fragment>\r\n          );\r\n        });\r\n\r\n        input = <div className=\"form-group-checkbox\">{input}</div>;\r\n      }\r\n\r\n      return (\r\n        <div key={\"g\" + key} className=\"form-group\">\r\n          <label className=\"form-label\" key={\"l\" + key} htmlFor={key}>\r\n            {m.label}\r\n          </label>\r\n          {input}\r\n        </div>\r\n      );\r\n    });\r\n    return formUI;\r\n  };\r\n\r\n  render() {\r\n    let title = this.props.title || \"Dynamic Form\";\r\n\r\n    return (\r\n      <div className={this.props.className}>\r\n        <h3 className=\"form-title\">{title}</h3>\r\n        <form\r\n          className=\"dynamic-form\"\r\n          onSubmit={e => {\r\n            this.onSubmit(e);\r\n          }}\r\n        >\r\n          {this.renderForm()}\r\n          <div className=\"form-actions\">\r\n            <button type=\"submit\">submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import checkName from './check-name';\r\nimport specialName from './special-name';\r\nimport validateRating from './validate-rating';\r\n\r\nexport default  {\r\n  checkName,\r\n  specialName,\r\n  validateRating\r\n}\r\n","export default function (input) {\r\n    return (/^[A-Z]/i.test(input));\r\n  }","export default function (input) {\r\n    return input.indexOf(\"superman\") == -1;\r\n }","export default function (input) {\r\n    let parsedInput = Number(input);\r\n    return (parsedInput > 0 && parsedInput <=5);\r\n  }","  \r\nimport React, { Component } from \"react\";\r\nimport DynamicForm from \"./DynamicForms.js\";\r\nimport Validator from './validators.js';\r\nimport QRCode from \"react-qr-code\";\r\n\r\nimport { PDFViewer, Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst YAML = require('json-to-pretty-yaml');\r\n\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#E4E4E4'\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n\r\nconst Console = prop => (\r\n  console[Object.keys(prop)[0]](...Object.values(prop))\r\n  ,null // ➜ React components must return something \r\n)\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: [],\r\n    current: {}\r\n  };\r\n\r\n  onSubmit = model => {\r\n    let data = [];\r\n    if (model.id) {\r\n      data = this.state.data.filter(d => {\r\n        return d.id != model.id;\r\n      });\r\n    } else {\r\n      model.id = +new Date();\r\n      data = this.state.data.slice();\r\n    }\r\n    \r\n    this.setState({\r\n      data: [model, ...data],\r\n    });\r\n  };\r\n\r\n  onEdit = id => {\r\n    let record = this.state.data.find(d => {\r\n      return d.id == id;\r\n    });\r\n    //alert(JSON.stringify(record));\r\n    this.setState({\r\n      current: record\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <DynamicForm\r\n          key={this.state.current.id}\r\n          className=\"form\"\r\n          title=\"Forms (GoUpile Simulation)\"\r\n          defaultValues={this.state.current}\r\n          validators={[\r\n            {\r\n              key: \"name\", validations: [\r\n                {\r\n                  \"validator\": Validator.checkName,\r\n                  \"message\": \"Name should start with alphabets\"\r\n                },\r\n                {\r\n                  \"validator\": Validator.specialName,\r\n                  \"message\": \"Name should not contain the word superman\"\r\n                },\r\n              ]\r\n            },\r\n            {\r\n              key: \"rating\", validations: [\r\n                {\r\n                  \"validator\": Validator.validateRating,\r\n                  \"message\": \"Rating should be between 0 and 5\"\r\n                },\r\n              ]\r\n            }\r\n          ]}\r\n          model={[\r\n            { key: \"name\", label: \"Name\", props: { required: true } },\r\n            { key: \"age\", label: \"Age\", type: \"number\" },\r\n            {\r\n              key: \"rating\",\r\n              label: \"Rating\",\r\n              type: \"number\",\r\n              props: { min: 0, max: 5 }\r\n            },\r\n            {\r\n              key: \"gender\",\r\n              label: \"Gender\",\r\n              type: \"radio\",\r\n              options: [\r\n                { key: \"male\", label: \"Male\", name: \"gender\", value: \"male\" },\r\n                {\r\n                  key: \"female\",\r\n                  label: \"Female\",\r\n                  name: \"gender\",\r\n                  value: \"female\"\r\n                }\r\n              ]\r\n            },\r\n            { key: \"qualification\", label: \"Qualification\" },\r\n            {\r\n              key: \"city\",\r\n              label: \"City\",\r\n              type: \"select\",\r\n              value: \"Mumbai\",\r\n              options: [\r\n                { key: \"mumbai\", label: \"Mumbai\", value: \"Mumbai\" },\r\n                { key: \"bangalore\", label: \"Bangalore\", value: \"Bangalore\" },\r\n                { key: \"kerala\", label: \"Kerala\", value: \"Kerala\" }\r\n              ]\r\n            },\r\n            {\r\n              key: \"skills\",\r\n              label: \"Skills\",\r\n              type: \"checkbox\",\r\n              options: [\r\n                { key: \"reactjs\", label: \"ReactJS\", value: \"reactjs\" },\r\n                { key: \"angular\", label: \"Angular\", value: \"angular\" },\r\n                { key: \"vuejs\", label: \"VueJS\", value: \"vuejs\" }\r\n              ]\r\n            }\r\n          ]}\r\n          onSubmit={model => {\r\n            this.onSubmit(model);\r\n          }}\r\n        />\r\n        <div className=\"centerText\">Resulting YAML:</div>\r\n        <pre style={{paddingLeft: \"22rem\"}}>{YAML.stringify(this.state.data[0])}</pre>\r\n        <div className=\"centerText\">Resulting QRCode:</div>\r\n        <div className=\"centerText\" >\r\n        <QRCode value={YAML.stringify(this.state.data[0])}/>\r\n        </div>\r\n        <div className=\"centerText\">Resulting PDF (simulation):</div>\r\n        <div style={{ textAlign: \"center\"}}>\r\n            <PDFViewer>\r\n                <Document>\r\n                    <Page size=\"A4\" style={styles.page}>\r\n                    <View style={styles.section}>\r\n                        <Text>Mr/Mrs [NAME] [SURNAME]</Text>\r\n                        <Text>Date of birth: [DATE]</Text>\r\n                        <Text>...</Text>\r\n                        <Text>Exam: [EXAM]</Text>\r\n                        <Text>...</Text>\r\n                        <Text>Condition:</Text>\r\n                        <Text>Pain in the [WHERE]</Text>\r\n                        <Text>...</Text>\r\n                    </View>\r\n                    </Page>\r\n                </Document>\r\n            </PDFViewer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Forms from './Forms.js';\n\nReactDOM.render(\n  <div>\n    <div style={{textAlign: \"center\"}}>\n      <h1>ISARVIT</h1>\n      <p>Version 0.0.2 26/12/2020</p>\n      <p>Automatic Medical Diagnosis Generator. Created by the École Centralle de Lille. <br /> Read the <a href=\"url\">Documentation</a> or explore the first <a href=\"url\">prototype.</a></p>\n    </div>\n    <Forms />\n  </div>\n,document.getElementById('root'));"],"sourceRoot":""}