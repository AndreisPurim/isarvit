(this.webpackJsonpisarvit=this.webpackJsonpisarvit||[]).push([[0],{236:function(e,t,a){},248:function(e,t){},250:function(e,t){},292:function(e,t){},293:function(e,t){},430:function(e,t,a){"use strict";a.r(t);var n=a(9),r=a(17),i=a.n(r),l=a(144),c=a.n(l),s=(a(236),a(107)),o=a(108),u=a(112),d=a(111),b=a(74),m=a(43),j=a(72),h=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(e){var l;return Object(s.a)(this,a),(l=t.call(this,e)).state={},l.validate=function(){var e={},t=l.props.validators;return console.log(t),t.forEach((function(t){console.log(t);var a=l.state[t.key];console.log("validating ".concat(t.key)),t.validations.forEach((function(n){n.validator(a)||(void 0==e[t.key]&&(e[t.key]=[]),e[t.key].push(n.message))}))})),console.log("ERRORS: ",e),e},l.onSubmit=function(e){e.preventDefault();var t=l.validate();if(0!==Object.entries(t).length)return alert(JSON.stringify(t)),!1;l.props.onSubmit&&l.props.onSubmit(l.state)},l.onChange=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"single";if("single"===a)l.setState(Object(j.a)({},t,e.target.value),(function(){}));else{var n=!!l.state[t]&&l.state[t].find((function(t){return t===e.target.value}));if(n){var r=l.state[t].filter((function(e){return e!==n}));l.setState(Object(j.a)({},t,r))}else{console.log("found",t,l.state[t]);var i=l.state[t]?Object(b.a)(l.state[t]):[];l.setState(Object(j.a)({},t,[e.target.value].concat(Object(b.a)(i))))}}},l.renderForm=function(){var e=l.props.model;l.props.defaultValues;return e.map((function(e){var t=e.key,a=e.type||"text",c=e.props||{},s=e.name,o=e.value,u=t;o=l.state[u]||"";var d=Object(r.createElement)("input",Object(m.a)(Object(m.a)({},c),{},{className:"form-input",type:a,key:t,name:s,value:o,onChange:function(e){l.onChange(e,u)}}));return"radio"==a&&(d=e.options.map((function(e){var t=e.value==o;return Object(n.jsxs)(i.a.Fragment,{children:[Object(r.createElement)("input",Object(m.a)(Object(m.a)({},c),{},{className:"form-input",type:a,key:e.key,name:e.name,checked:t,value:e.value,onChange:function(t){l.onChange(t,e.name)}})),Object(n.jsx)("label",{children:e.label},"ll"+e.key)]},"fr"+e.key)})),d=Object(n.jsx)("div",{className:"form-group-radio",children:d})),"select"==a&&(d=e.options.map((function(e){e.value;return Object(r.createElement)("option",Object(m.a)(Object(m.a)({},c),{},{className:"form-input",key:e.key,value:e.value}),e.value)})),d=Object(n.jsx)("select",{value:o,onChange:function(t){l.onChange(t,e.key)},children:d})),"checkbox"==a&&(d=e.options.map((function(t){var s=!1;return o&&o.length>0&&(s=o.indexOf(t.value)>-1),Object(n.jsxs)(i.a.Fragment,{children:[Object(r.createElement)("input",Object(m.a)(Object(m.a)({},c),{},{className:"form-input",type:a,key:t.key,name:t.name,checked:s,value:t.value,onChange:function(t){l.onChange(t,e.key,"multiple")}})),Object(n.jsx)("label",{children:t.label},"ll"+t.key)]},"cfr"+t.key)})),d=Object(n.jsx)("div",{className:"form-group-checkbox",children:d})),Object(n.jsxs)("div",{className:"form-group",children:[Object(n.jsx)("label",{className:"form-label",htmlFor:t,children:e.label},"l"+t),d]},"g"+t)}))},l}return Object(o.a)(a,[{key:"render",value:function(){var e=this,t=this.props.title||"Dynamic Form";return Object(n.jsxs)("div",{className:this.props.className,children:[Object(n.jsx)("h3",{className:"form-title",children:t}),Object(n.jsxs)("form",{className:"dynamic-form",onSubmit:function(t){e.onSubmit(t)},children:[this.renderForm(),Object(n.jsx)("div",{className:"form-actions",children:Object(n.jsx)("button",{type:"submit",children:"submit"})})]})]})}}],[{key:"getDerivedStateFromProps",value:function(e,t){return console.log("gds:p:s",e.defaultValues,t),e.defaultValues&&e.defaultValues.id!==t.id?Object(m.a)({},e.defaultValues):(console.log("no state change"),null)}}]),a}(i.a.Component),p={checkName:function(e){return/^[A-Z]/i.test(e)},specialName:function(e){return-1==e.indexOf("superman")},validateRating:function(e){var t=Number(e);return t>=0&&t<=5}},f=a(218),v=a.n(f),g=a(28),O=a(427),y=g.d.create({page:{flexDirection:"row",backgroundColor:"#E4E4E4"},section:{margin:10,padding:10,flexGrow:1}}),x=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){var e;Object(s.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).state={data:[],current:{}},e.onSubmit=function(t){var a=[];t.id?a=e.state.data.filter((function(e){return e.id!=t.id})):(t.id=+new Date,a=e.state.data.slice()),e.setState({data:[t].concat(Object(b.a)(a))})},e.onEdit=function(t){var a=e.state.data.find((function(e){return e.id==t}));e.setState({current:a})},e}return Object(o.a)(a,[{key:"render",value:function(){var e=this;return Object(n.jsxs)("div",{className:"App",children:[Object(n.jsx)(h,{className:"form",title:"Forms (GoUpile Simulation)",defaultValues:this.state.current,validators:[{key:"name",validations:[{validator:p.checkName,message:"Name should start with alphabets"},{validator:p.specialName,message:"Name should not contain the word superman"}]},{key:"pain",validations:[{validator:p.validateRating,message:"Pain should be between 0 and 5"}]}],model:[{key:"name",label:"Name",props:{required:!0}},{key:"age",label:"Age",type:"number"},{key:"gender",label:"Gender",type:"radio",options:[{key:"male",label:"Male",name:"gender",value:"male"},{key:"female",label:"Female",name:"gender",value:"female"}]},{key:"exam",label:"Exam Type"},{key:"pain",label:"Pain scale (0 to 5)",type:"number",props:{min:0,max:5}},{key:"kidney",label:"Which Kidney",type:"select",value:"None",options:[{key:"none",label:"None",value:"None"},{key:"left",label:"Left",value:"Left"},{key:"right",label:"Right",value:"Right"},{key:"both",label:"Both",value:"Both"}]},{key:"habits",label:"Habits / Antecedents",type:"checkbox",options:[{key:"smoker",label:"Smoker",value:"Smoker"},{key:"drugs",label:"Drug Abuse",value:"Drug Abuse"},{key:"surgery",label:"Surgery",value:"Surgery"}]}],onSubmit:function(t){e.onSubmit(t)}},this.state.current.id),Object(n.jsx)("div",{className:"centerText",children:"Resulting YAML:"}),Object(n.jsx)("pre",{style:{paddingLeft:"22rem"},children:O.stringify(this.state.data[0])}),Object(n.jsx)("div",{className:"centerText",children:"Resulting QRCode:"}),Object(n.jsx)("div",{className:"centerText",children:Object(n.jsx)(v.a,{value:O.stringify(this.state.data[0])})}),Object(n.jsx)("div",{className:"centerText",children:"Resulting PDF (simulation):"}),Object(n.jsx)("div",{style:{textAlign:"center"},children:Object(n.jsx)(g.b,{children:Object(n.jsx)(g.a,{children:Object(n.jsx)(g.c,{size:"A4",style:y.page,children:Object(n.jsxs)(g.f,{style:y.section,children:[Object(n.jsx)(g.e,{children:"Mr/Mrs [NAME] [SURNAME]"}),Object(n.jsx)(g.e,{children:"Date of birth: [DATE]"}),Object(n.jsx)(g.e,{children:"..."}),Object(n.jsx)(g.e,{children:"Exam: [EXAM]"}),Object(n.jsx)(g.e,{children:"..."}),Object(n.jsx)(g.e,{children:"Condition:"}),Object(n.jsx)(g.e,{children:"Pain in the [WHERE]"}),Object(n.jsx)(g.e,{children:"..."})]})})})})})]})}}]),a}(r.Component),k=a.p+"static/media/logo.8d03d08e.png";c.a.render(Object(n.jsxs)("div",{children:[Object(n.jsxs)("div",{style:{textAlign:"center"},children:[Object(n.jsx)("img",{src:k,style:{paddingTop:"1rem",width:"5%"}}),Object(n.jsx)("h1",{children:"ISARVIT"}),Object(n.jsx)("p",{children:"Version 0.0.2 26/12/2020"}),Object(n.jsxs)("p",{children:["Automatic Medical Diagnosis Generator. Created by the \xc9cole Centralle de Lille. ",Object(n.jsx)("br",{})," Read the ",Object(n.jsx)("a",{href:"https://github.com/AndreisPurim/isarvit",children:"Documentation"})," or explore the first ",Object(n.jsx)("a",{href:"https://colab.research.google.com/drive/1qffKY50XG0yTuh7z_9st8_2lQpMUYGA-?usp=sharing",children:"prototype."})]})]}),Object(n.jsx)(x,{})]}),document.getElementById("root"))}},[[430,1,2]]]);
//# sourceMappingURL=main.0fb03efc.chunk.js.map