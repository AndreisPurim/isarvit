[{"/home/andreis/workarea/isarvit/src/index.js":"1","/home/andreis/workarea/isarvit/src/Forms.js":"2","/home/andreis/workarea/isarvit/src/DynamicForms.js":"3","/home/andreis/workarea/isarvit/src/validators.js":"4","/home/andreis/workarea/isarvit/src/check-name.js":"5","/home/andreis/workarea/isarvit/src/special-name.js":"6","/home/andreis/workarea/isarvit/src/validate-rating.js":"7"},{"size":718,"mtime":1609007997368,"results":"8","hashOfConfig":"9"},{"size":5171,"mtime":1609008392881,"results":"10","hashOfConfig":"9"},{"size":6550,"mtime":1609004394455,"results":"11","hashOfConfig":"9"},{"size":203,"mtime":1609004532373,"results":"12","hashOfConfig":"9"},{"size":75,"mtime":1609004529563,"results":"13","hashOfConfig":"9"},{"size":82,"mtime":1608993840389,"results":"14","hashOfConfig":"9"},{"size":127,"mtime":1609008440404,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v6xmwy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/andreis/workarea/isarvit/src/index.js",["35"],"/home/andreis/workarea/isarvit/src/Forms.js",["36","37","38","39"],"/home/andreis/workarea/isarvit/src/DynamicForms.js",["40","41","42","43","44","45","46","47","48","49","50"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default class DynamicForm extends React.Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    console.log(\"gds:p:s\", nextProps.defaultValues, prevState);\r\n\r\n    let derivedState = {};\r\n\r\n    if (\r\n      nextProps.defaultValues &&\r\n      nextProps.defaultValues.id !== prevState.id\r\n    ) {\r\n      //   Object.keys(prevState).forEach(k => {\r\n      //     derivedState[k] = \"\";\r\n      //   });\r\n      return {\r\n        ...nextProps.defaultValues\r\n      };\r\n    }\r\n\r\n    console.log(\"no state change\");\r\n    return null;\r\n  }\r\n\r\n  // Validate form fields (This is configured in DynamicForm as props)\r\n  validate = () => {\r\n    let errors = {};\r\n    const validators = this.props.validators;\r\n    console.log(validators);\r\n    validators.forEach((v) => {\r\n      console.log(v);\r\n      let fieldValue = this.state[v.key];\r\n      console.log(`validating ${v.key}`);\r\n      v.validations.forEach((vd) => {\r\n        let r = vd.validator(fieldValue);\r\n        if (!r) {\r\n          if (errors[v.key] == undefined) {\r\n            errors[v.key] = [];\r\n          }\r\n          //errors.push(`${v.key} ${vd.message}`)\r\n          // errors.push({\r\n          //   [v.key]:  vd.message\r\n          // });\r\n          errors[v.key].push(vd.message);\r\n        }\r\n      }); \r\n    })\r\n\r\n    console.log(\"ERRORS: \", errors);\r\n\r\n    return errors;\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    let errors = this.validate();\r\n    if (Object.entries(errors).length !== 0) {\r\n      alert(JSON.stringify(errors));\r\n      return false;\r\n    }\r\n    if (this.props.onSubmit) this.props.onSubmit(this.state);\r\n  };\r\n\r\n  onChange = (e, key, type = \"single\") => {\r\n    //console.log(`${key} changed ${e.target.value} type ${type}`);\r\n    if (type === \"single\") {\r\n      this.setState(\r\n        {\r\n          [key]: e.target.value\r\n        },\r\n        () => {}\r\n      );\r\n    } else {\r\n      // Array of values (e.g. checkbox): TODO: Optimization needed.\r\n      let found = this.state[key]\r\n        ? this.state[key].find(d => d === e.target.value)\r\n        : false;\r\n\r\n      if (found) {\r\n        let data = this.state[key].filter(d => {\r\n          return d !== found;\r\n        });\r\n        this.setState({\r\n          [key]: data\r\n        });\r\n      } else {\r\n        console.log(\"found\", key, this.state[key]);\r\n        // this.setState({\r\n        //   [key]: [e.target.value, ...this.state[key]]\r\n        // });\r\n        let others = this.state[key] ? [...this.state[key]] : [];\r\n        this.setState({\r\n          [key]: [e.target.value, ...others]\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  renderForm = () => {\r\n    let model = this.props.model;\r\n    let defaultValues = this.props.defaultValues;\r\n\r\n    let formUI = model.map(m => {\r\n      let key = m.key;\r\n      let type = m.type || \"text\";\r\n      let props = m.props || {};\r\n      let name = m.name;\r\n      let value = m.value;\r\n\r\n      let target = key;\r\n      value = this.state[target] || \"\";\r\n\r\n      let input = (\r\n        <input\r\n          {...props}\r\n          className=\"form-input\"\r\n          type={type}\r\n          key={key}\r\n          name={name}\r\n          value={value}\r\n          onChange={e => {\r\n            this.onChange(e, target);\r\n          }}\r\n        />\r\n      );\r\n\r\n      if (type == \"radio\") {\r\n        input = m.options.map(o => {\r\n          let checked = o.value == value;\r\n          return (\r\n            <React.Fragment key={\"fr\" + o.key}>\r\n              <input\r\n                {...props}\r\n                className=\"form-input\"\r\n                type={type}\r\n                key={o.key}\r\n                name={o.name}\r\n                checked={checked}\r\n                value={o.value}\r\n                onChange={e => {\r\n                  this.onChange(e, o.name);\r\n                }}\r\n              />\r\n              <label key={\"ll\" + o.key}>{o.label}</label>\r\n            </React.Fragment>\r\n          );\r\n        });\r\n        input = <div className=\"form-group-radio\">{input}</div>;\r\n      }\r\n\r\n      if (type == \"select\") {\r\n        input = m.options.map(o => {\r\n          let checked = o.value == value;\r\n          //console.log(\"select: \", o.value, value);\r\n          return (\r\n            <option\r\n              {...props}\r\n              className=\"form-input\"\r\n              key={o.key}\r\n              value={o.value}\r\n            >\r\n              {o.value}\r\n            </option>\r\n          );\r\n        });\r\n\r\n        //console.log(\"Select default: \", value);\r\n        input = (\r\n          <select\r\n            value={value}\r\n            onChange={e => {\r\n              this.onChange(e, m.key);\r\n            }}\r\n          >\r\n            {input}\r\n          </select>\r\n        );\r\n      }\r\n\r\n      if (type == \"checkbox\") {\r\n        input = m.options.map(o => {\r\n          //let checked = o.value == value;\r\n          let checked = false;\r\n          if (value && value.length > 0) {\r\n            checked = value.indexOf(o.value) > -1 ? true : false;\r\n          }\r\n          //console.log(\"Checkbox: \", checked);\r\n          return (\r\n            <React.Fragment key={\"cfr\" + o.key}>\r\n              <input\r\n                {...props}\r\n                className=\"form-input\"\r\n                type={type}\r\n                key={o.key}\r\n                name={o.name}\r\n                checked={checked}\r\n                value={o.value}\r\n                onChange={e => {\r\n                  this.onChange(e, m.key, \"multiple\");\r\n                }}\r\n              />\r\n              <label key={\"ll\" + o.key}>{o.label}</label>\r\n            </React.Fragment>\r\n          );\r\n        });\r\n\r\n        input = <div className=\"form-group-checkbox\">{input}</div>;\r\n      }\r\n\r\n      return (\r\n        <div key={\"g\" + key} className=\"form-group\">\r\n          <label className=\"form-label\" key={\"l\" + key} htmlFor={key}>\r\n            {m.label}\r\n          </label>\r\n          {input}\r\n        </div>\r\n      );\r\n    });\r\n    return formUI;\r\n  };\r\n\r\n  render() {\r\n    let title = this.props.title || \"Dynamic Form\";\r\n\r\n    return (\r\n      <div className={this.props.className}>\r\n        <h3 className=\"form-title\">{title}</h3>\r\n        <form\r\n          className=\"dynamic-form\"\r\n          onSubmit={e => {\r\n            this.onSubmit(e);\r\n          }}\r\n        >\r\n          {this.renderForm()}\r\n          <div className=\"form-actions\">\r\n            <button type=\"submit\">submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}",["51","52"],"/home/andreis/workarea/isarvit/src/validators.js",["53"],"import checkName from './check-name';\r\nimport specialName from './special-name';\r\nimport validateRating from './validate-rating';\r\n\r\nexport default  {\r\n  checkName,\r\n  specialName,\r\n  validateRating\r\n}\r\n","/home/andreis/workarea/isarvit/src/check-name.js",["54"],"export default function (input) {\r\n    return (/^[A-Z]/i.test(input));\r\n  }","/home/andreis/workarea/isarvit/src/special-name.js",["55","56"],"export default function (input) {\r\n    return input.indexOf(\"superman\") == -1;\r\n }","/home/andreis/workarea/isarvit/src/validate-rating.js",["57"],{"ruleId":"58","severity":1,"message":"59","line":11,"column":7,"nodeType":"60","endLine":11,"endColumn":66},{"ruleId":"61","severity":1,"message":"62","line":26,"column":7,"nodeType":"63","messageId":"64","endLine":26,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":28,"column":3,"nodeType":"67","messageId":"68","endLine":28,"endColumn":4},{"ruleId":"69","severity":1,"message":"70","line":41,"column":21,"nodeType":"71","messageId":"72","endLine":41,"endColumn":23},{"ruleId":"69","severity":1,"message":"73","line":55,"column":19,"nodeType":"71","messageId":"72","endLine":55,"endColumn":21},{"ruleId":"61","severity":1,"message":"74","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":4},{"ruleId":"61","severity":1,"message":"79","line":13,"column":9,"nodeType":"63","messageId":"64","endLine":13,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":43,"column":29,"nodeType":"71","messageId":"72","endLine":43,"endColumn":31},{"ruleId":"61","severity":1,"message":"80","line":107,"column":9,"nodeType":"63","messageId":"64","endLine":107,"endColumn":22},{"ruleId":"69","severity":1,"message":"73","line":133,"column":16,"nodeType":"71","messageId":"72","endLine":133,"endColumn":18},{"ruleId":"69","severity":1,"message":"73","line":135,"column":33,"nodeType":"71","messageId":"72","endLine":135,"endColumn":35},{"ruleId":"69","severity":1,"message":"73","line":157,"column":16,"nodeType":"71","messageId":"72","endLine":157,"endColumn":18},{"ruleId":"61","severity":1,"message":"81","line":159,"column":15,"nodeType":"63","messageId":"64","endLine":159,"endColumn":22},{"ruleId":"69","severity":1,"message":"73","line":159,"column":33,"nodeType":"71","messageId":"72","endLine":159,"endColumn":35},{"ruleId":"69","severity":1,"message":"73","line":186,"column":16,"nodeType":"71","messageId":"72","endLine":186,"endColumn":18},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":5,"column":1,"nodeType":"88","endLine":9,"endColumn":2},{"ruleId":"86","severity":1,"message":"89","line":1,"column":1,"nodeType":"88","endLine":3,"endColumn":4},{"ruleId":"86","severity":1,"message":"89","line":1,"column":1,"nodeType":"88","endLine":3,"endColumn":3},{"ruleId":"69","severity":1,"message":"73","line":2,"column":38,"nodeType":"71","messageId":"72","endLine":2,"endColumn":40},{"ruleId":"86","severity":1,"message":"89","line":1,"column":1,"nodeType":"88","endLine":4,"endColumn":4},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Console' is assigned a value but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'ReactDOM' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'derivedState' is assigned a value but never used.","'defaultValues' is assigned a value but never used.","'checked' is assigned a value but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation"]